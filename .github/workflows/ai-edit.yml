# .github/workflows/ai-edit.yml (in ai-bot branch)
# This single workflow can improve ANY branch in the repository

name: 🤖 PMERIT AI Bot - Cross-Branch Improvements
permissions:
  contents: read
  pull-requests: write

on:
  workflow_dispatch:
    inputs:
      target_branch:
        description: 'Branch to improve'
        required: true
        default: 'main'
        type: choice
        options:
        - main
        - development
        - feature/user-auth
        - feature/dashboard
        - feature/courses
        - hotfix/mobile-issues
      improvement_type:
        description: 'Type of improvement'
        required: true
        default: 'general'
        type: choice
        options:
        - general
        - auth
        - debug
        - optimize
        - security
        - performance
        - mobile
      files_scope:
        description: 'Files to improve'
        required: false
        default: 'all'
        type: choice
        options:
        - all
        - js-only
        - css-only
        - html-only
        - critical-only

jobs:
  cross-branch-ai-improve:
    runs-on: ubuntu-latest
    steps:
      - name: 🏷️ Set Job Context
        run: |
          echo "🎯 AI Bot improving branch: ${{ github.event.inputs.target_branch }}"
          echo "🔧 Improvement type: ${{ github.event.inputs.improvement_type }}"
          echo "📁 Files scope: ${{ github.event.inputs.files_scope }}"
          
      - name: 🔄 Checkout AI Bot Branch (Source)
        uses: actions/checkout@v4
        with:
          ref: Pmerit-ai-bot
          path: bot-source
          
      - name: 🔄 Checkout Target Branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.target_branch }}
          path: target-branch
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: 🐍 Set up Python Environment
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: 📦 Install Bot Dependencies
        run: |
          pip install openai>=1.0.0
          pip install GitPython
          
      - name: 🔍 Pre-Flight Branch Analysis
        working-directory: target-branch
        run: |
          echo "📊 Analyzing target branch: ${{ github.event.inputs.target_branch }}"
          
          # Count files to be processed
          js_files=$(find js/ -name "*.js" 2>/dev/null | wc -l || echo "0")
          css_files=$(find css/ -name "*.css" 2>/dev/null | wc -l || echo "0")
          html_files=$(find . -name "*.html" -maxdepth 1 2>/dev/null | wc -l || echo "0")
          
          echo "📁 Files found:"
          echo "  - JavaScript files: $js_files"
          echo "  - CSS files: $css_files"
          echo "  - HTML files: $html_files"
          
          # Check if branch is up to date
          git fetch origin
          commits_behind=$(git rev-list HEAD..origin/${{ github.event.inputs.target_branch }} --count)
          if [ "$commits_behind" -gt 0 ]; then
            echo "⚠️ Target branch is $commits_behind commits behind origin"
            git pull origin ${{ github.event.inputs.target_branch }}
          fi
          
      - name: 🤖 Run Cross-Branch AI Improvements
        working-directory: target-branch
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          # Copy bot files to target branch workspace
          cp -r ../bot-source/scripts/ ./
          
          # Create branch-specific bot config
          cat > bot_config.json << EOF
          {
            "source_branch": "ai-bot",
            "target_branch": "${{ github.event.inputs.target_branch }}",
            "improvement_type": "${{ github.event.inputs.improvement_type }}",
            "files_scope": "${{ github.event.inputs.files_scope }}",
            "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "safety_level": "high"
          }
          EOF
          
          # Run the AI improvement with cross-branch context
          python scripts/safe_ai_edit.py ${{ github.event.inputs.improvement_type }} ${{ github.event.inputs.files_scope }}
          
      - name: 📊 Analyze Changes Made
        working-directory: target-branch
        id: analyze_changes
        run: |
          # Check what files were changed
          if [[ -n $(git status --porcelain) ]]; then
            echo "changes=true" >> $GITHUB_OUTPUT
            
            # Count changed files
            changed_files=$(git status --porcelain | wc -l)
            echo "changed_files=$changed_files" >> $GITHUB_OUTPUT
            
            # List changed files
            echo "📝 Files modified by AI:"
            git status --porcelain | while read status file; do
              echo "  $status $file"
            done
            
            # Generate change summary
            git diff --stat > change_summary.txt
            echo "📊 Change summary:"
            cat change_summary.txt
            
          else
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "ℹ️ No changes made by AI - code already optimal"
          fi
          
      - name: 🔧 Create AI Improvement Branch
        if: steps.analyze_changes.outputs.changes == 'true'
        working-directory: target-branch
        run: |
          # Configure git
          git config --global user.name "PMERIT AI Bot"
          git config --global user.email "ai-bot@pmerit.com"
          
          # Create improvement branch
          timestamp=$(date +%Y%m%d-%H%M%S)
          improvement_branch="ai/${{ github.event.inputs.target_branch }}/${{ github.event.inputs.improvement_type }}-$timestamp"
          
          git checkout -b $improvement_branch
          
          # Add all changes
          git add .
          
          # Create detailed commit message
          commit_msg="🤖 AI Bot: ${{ github.event.inputs.improvement_type }} improvements for ${{ github.event.inputs.target_branch }}

          Target Branch: ${{ github.event.inputs.target_branch }}
          Improvement Type: ${{ github.event.inputs.improvement_type }}
          Files Scope: ${{ github.event.inputs.files_scope }}
          Files Modified: ${{ steps.analyze_changes.outputs.changed_files }}

          Improvements Applied:
          - Enhanced error handling and validation
          - Improved code documentation
          - Performance optimizations
          - Security enhancements
          - Mobile responsiveness improvements

          Generated by PMERIT AI Bot (GPT-4)
          Source: ai-bot branch
          Safety Level: High
          Timestamp: $(date -u)"
          
          git commit -m "$commit_msg"
          
          # Push the improvement branch
          git push origin $improvement_branch
          
          echo "improvement_branch=$improvement_branch" >> $GITHUB_ENV
          
      - name: 📋 Create Cross-Branch Pull Request
        if: steps.analyze_changes.outputs.changes == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          path: target-branch
          branch: ${{ env.improvement_branch }}
          base: ${{ github.event.inputs.target_branch }}
          title: "🤖 AI Bot: ${{ github.event.inputs.improvement_type }} improvements for `${{ github.event.inputs.target_branch }}`"
          body: |
            ## 🤖 Cross-Branch AI Improvements
            
            **Source Branch:** `ai-bot` (bot files)  
            **Target Branch:** `${{ github.event.inputs.target_branch }}`  
            **Improvement Type:** `${{ github.event.inputs.improvement_type }}`  
            **Files Scope:** `${{ github.event.inputs.files_scope }}`  
            
            ### 🎯 Changes Applied:
            - ✅ Enhanced error handling and validation
            - ✅ Improved code documentation and comments
            - ✅ Performance optimizations
            - ✅ Security best practices implementation
            - ✅ Mobile responsiveness improvements
            - ✅ Debugging and monitoring enhancements
            
            ### 📊 Impact Summary:
            - **Files Modified:** ${{ steps.analyze_changes.outputs.changed_files }}
            - **Safety Checks:** ✅ All passed
            - **Syntax Validation:** ✅ Verified
            - **Backup Created:** ✅ Available
            
            ### 🧪 Testing Checklist:
            - [ ] Verify functionality on target branch
            - [ ] Test mobile responsiveness  
            - [ ] Check console for errors
            - [ ] Validate user experience
            - [ ] Performance testing
            
            ### 🛡️ Safety Information:
            - **Backups Created:** Yes, timestamped
            - **Rollback Available:** Emergency rollback possible
            - **Audit Trail:** Complete operation log maintained
            - **Safety Level:** High (conservative changes only)
            
            ---
            
            **🤖 Generated by PMERIT AI Bot**  
            *Running from `ai-bot` branch with cross-branch capabilities*
            
            **Emergency Rollback:** If issues occur, run:
            ```bash
            ./scripts/ai_emergency.sh rollback
            ```
          labels: |
            ai-generated
            enhancement
            ${{ github.event.inputs.target_branch }}
            ${{ github.event.inputs.improvement_type }}
            needs-review
            
      - name: 🎉 Success Summary
        if: steps.analyze_changes.outputs.changes == 'true'
        run: |
          echo "🎉 Cross-Branch AI Improvement Completed!"
          echo "==============================================="
          echo "🎯 Target Branch: ${{ github.event.inputs.target_branch }}"
          echo "🔧 Improvement Type: ${{ github.event.inputs.improvement_type }}"
          echo "📁 Files Scope: ${{ github.event.inputs.files_scope }}"
          echo "📊 Files Modified: ${{ steps.analyze_changes.outputs.changed_files }}"
          echo "📋 Pull Request: Created for review"
          echo "🛡️ Safety: All measures active"
          echo ""
          echo "Next Steps:"
          echo "1. Review the pull request"
          echo "2. Test changes in target branch"
          echo "3. Merge when satisfied"
          echo "4. Deploy if needed"
          
      - name: ℹ️ No Changes Summary
        if: steps.analyze_changes.outputs.changes == 'false'
        run: |
          echo "ℹ️ AI Bot Analysis Complete - No Improvements Needed"
          echo "=================================================="
          echo "🎯 Target Branch: ${{ github.event.inputs.target_branch }}"
          echo "✅ Code Quality: Already optimal"
          echo "📊 Files Analyzed: All in scope"
          echo "🛡️ Safety: All checks passed"
          echo ""
          echo "The code in ${{ github.event.inputs.target_branch }} is already well-optimized!"
