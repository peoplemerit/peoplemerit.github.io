# =================================================================
# PMERIT AI Development Bot Workflow
# =================================================================

name: PMERIT AI Development Bot

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  issues:
    types: [opened, edited]
  release:
    types: [published, created]
  schedule:
    - cron: '0 6 * * *'  # Daily scan at 6 AM UTC
  workflow_dispatch:

env:
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  ai-diagnostic:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write

    steps:
      - name: 🔍 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install Dependencies
        run: |
          npm install --save openai@^4.0.0

      - name: 🤖 Run PMERIT AI Diagnostic Bot
        id: ai_scan
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "🎓 Starting PMERIT Educational Platform AI Analysis..."
          node scripts/ai-diagnostic-bot.js
          echo "scan_completed=true" >> $GITHUB_ENV

      - name: 📊 Create Diagnostic Summary
        if: env.scan_completed == 'true'
        run: |
          echo "## 🤖 PMERIT AI Bot Summary" >> $GITHUB_STEP_SUMMARY
          echo "**Mission:** Breaking poverty cycles through accessible education" >> $GITHUB_STEP_SUMMARY
          echo "**Scan Date:** $(date)" >> $GITHUB_STEP_SUMMARY
          echo "**Platform Status:** Educational Platform Optimized ✅" >> $GITHUB_STEP_SUMMARY
          if [ -f "diagnostic-reports/latest-summary.md" ]; then
            cat diagnostic-reports/latest-summary.md >> $GITHUB_STEP_SUMMARY
          fi

      - name: 📝 Commit AI Reports
        if: env.scan_completed == 'true'
        run: |
          git config --local user.email "ai-bot@pmerit.com"
          git config --local user.name "PMERIT AI Bot 🤖"
          git add diagnostic-reports/ security-reports/ mobile-reports/ educational-reports/ action-plans/ || true
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "🤖 AI Diagnostic Report - $(date '+%Y-%m-%d %H:%M UTC')
🎓 Educational Platform Analysis Complete
📊 Reports: Security, Mobile, Educational Impact
🚀 Mission: Accessible education for underserved communities"
            git push
          fi

      - name: 🐙 Create GitHub Issues for Critical Findings
        if: env.scan_completed == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            const criticalFindingsPath = path.join('diagnostic-reports', 'critical-findings.json');
            if (fs.existsSync(criticalFindingsPath)) {
              const findings = JSON.parse(fs.readFileSync(criticalFindingsPath, 'utf8'));
              for (const finding of findings) {
                const issue = await github.rest.issues.create({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  title: `🚨 Critical: ${finding.issue}`,
                  body: `## 🎓 PMERIT Educational Platform - Critical Finding

**Category:** ${finding.category}
**File:** \`${finding.file}\`
**Impact:** ${finding.impact}

### 📋 Recommendation
${finding.recommendation}

### 🎯 Mission Priority
This issue affects our mission of providing accessible education to underserved communities.

_Auto-generated by PMERIT AI Bot 🤖_`,
                  labels: ['critical', 'ai-bot', 'educational-platform']
                });
                console.log(`Created issue #${issue.data.number}: ${finding.issue}`);
              }
            }
